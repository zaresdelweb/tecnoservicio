.\" Man page generated from reStructuredText.
.
.TH "BPYTHON" "1" "June 03, 2015" "mercurial" "bpython"
.SH NAME
bpython \- a fancy {curses, GTK+, urwid} interface to the Python interactive interpreter
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBbpython\fP [\fIoptions\fP] [\fIfile\fP [\fIargs\fP]]
.sp
\fBbpython\-gtk\fP [\fIoptions\fP] [\fIfile\fP [\fIargs\fP]]
.sp
\fBbpython\-urwid\fP [\fIoptions\fP] [\fIfile\fP [\fIargs\fP]]
.SH DESCRIPTION
.sp
The idea is to provide the user with all the features in\-line, much like modern
IDEs, but in a simple, lightweight package that can be run in a terminal window.
.INDENT 0.0
.TP
.B In\-line syntax highlighting.
Hilights commands as you type!
.TP
.B Readline\-like autocomplete with suggestions displayed as you type.
Press tab to complete expressions when there\(aqs only one suggestion.
.TP
.B Expected parameter list.
This displays a list of parameters for any function you call. It uses the
inspect module, then tries pydoc.
.TP
.B Rewind.
This is a bit misleading, but it code that has been entered is remembered,
and when you Rewind, it pops the last line and re\-evaluates the entire
code. This is error\-prone, and mostly useful for defining classes and
functions.
.TP
.B Pastebin code/write to file.
This posts the current buffer to a pastebin (paste.pocoo.org) or writes it
to a file.
.TP
.B Flush curses screen to stdout.
Unlike other curses apps, bpython dumps the screen data to stdout when you
quit, so you see what you\(aqve done in the buffer of your terminal.
.UNINDENT
.SH OPTIONS
.sp
The long and short forms of options, shown here as alternatives, are equivalent.
If \fBbpython\fP sees an argument it does not know, execution falls back to
the regular Python interpreter.
.INDENT 0.0
.TP
.BI \-\-config\fB= <config>
Use <config> instead of default config file.
.TP
.B \-h\fP,\fB  \-\-help
Show the help message and exit.
.TP
.B \-i\fP,\fB  \-\-interactive
Drop to bpython shell after running file instead of exiting.
The PYTHONSTARTUP file is not read.
.TP
.B \-q\fP,\fB  \-\-quiet
Do not flush the output to stdout.
.TP
.B \-V\fP,\fB  \-\-version
Print \fBbpython\fP\(aqs version and exit.
.UNINDENT
.sp
In addition to the above options, \fBbpython\-urwid\fP also supports the
following options if Twisted is available:
.INDENT 0.0
.TP
.BI \-r \ <reactor>\fP,\fB \ \-\-reactor\fB= <reactor>
Use Twisted\(aqs <reactor> instead of urwid\(aqs
event loop.
.TP
.B \-\-help\-reactors
Display a list of available Twisted
reactors.
.TP
.BI \-p \ <plugin>\fP,\fB \ \-\-plugin\fB= <plugin>
Execute a \fBtwistd\fP plugin. Use
\fBtwistd\fP to get a list of available
plugins. Use \-\- to pass options to the
plugin.
.TP
.BI \-s \ <port>\fP,\fB \ \-\-server\fB= <port>
Run an eval server on port <port>. This
options forces the use of a Twisted reactor.
.UNINDENT
.sp
\fBbpython\-gtk\fP also supports the following options:
.INDENT 0.0
.TP
.BI \-\-socket\-id\fB= <socket\-id>
Embed bpython.
.UNINDENT
.SH KEYS
.sp
\fBbpython\fP\(aqs keys are fully configurable. See
\fI\%http://docs.bpython\-interpreter.org/configuration.html#keyboard\fP
.SH FILES
.sp
\fB$XDG_CONFIG_HOME/bpython/config\fP
.sp
Your bpython config. See sample\-config (in /usr/share/doc/bpython/examples on
Debian) for various options you can use, or read \fIpython\-config(5)\fP\&.
.SH KNOWN BUGS
.sp
See \fI\%http://bitbucket.org/bobf/bpython/issues/\fP for a list of known issues.
.SH SEE ALSO
.sp
\fIbpython\-config(5)\fP, \fIpython(1)\fP
.SH AUTHOR
.sp
\fBbpython\fP was written by Robert Anthony Farrell
<\fI\%robertanthonyfarrel@gmail.com\fP> and his bunch of loyal followers.
.sp
This manual page was written by Jørgen Pedersen Tjernø <\fI\%jorgen@devsoft.no\fP>,
for the Debian project (but may be used by others).
.SH COPYRIGHT
2008-2012 Bob Farrell, Andreas Stuehrk et al.
.\" Generated by docutils manpage writer.
.
